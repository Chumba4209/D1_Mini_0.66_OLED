#include <Wire.h> // Include wire library for I2C communication
#include <U8g2lib.h> // Include library for OLED display
#include <DHT.h> // Include the DHT library for DHT sensor


#define SCREEN_WIDTH 64  // Define width of the smaller 0.66" OLED screen
#define SCREEN_HEIGHT 48 // Define height of the smaller 0.66" OLED screen

// Setup U8g2 library with D1 (SCL) and D2 (SDA) pins for SSD1306 OLED
U8G2_SSD1306_128X64_NONAME_F_SW_I2C u8g2(U8G2_R0, /* clock=*/ D1, /* data=*/ D2, /* reset=*/ U8X8_PIN_NONE);


#define DHTPIN D4     // Digital pin connected to the DHT sensor
#define DHTTYPE DHT22   // DHT 11

DHT dht(DHTPIN, DHTTYPE); // Create a DHT object

void setup() {
  Serial.begin(9600); // Initialize serial communication
  dht.begin(); // Initialize DHT sensor
  u8g2.begin(); // Initialize OLED display
}

void loop() {
  // Read sensor values
  
  float temperature = dht.readTemperature(); // Read temperature from DHT sensor
  float humidity = dht.readHumidity(); // Read humidity from DHT sensor

  // Clear the buffer to prepare for drawing
  u8g2.clearBuffer(); 

  u8g2.setFont(u8g2_font_6x12_tf); // Choose a font

  // Display the "BMP180" label on the first line
  u8g2.setCursor(40, 30); 
  u8g2.print("DHT22");

  // Display temperature label "T:" followed by the value on the second line
  u8g2.setCursor(40, 45); 
  u8g2.print("T:");
  u8g2.print(temperature);
  u8g2.print(" C");

  // Display pressure label "H:" followed by the value on the third line
  u8g2.setCursor(40, 60); 
  u8g2.print("H:");
  u8g2.print(humidity);
  u8g2.print(" %");

  // Send the buffer to the display (this will update the screen)
  u8g2.sendBuffer(); 

  delay(2000); // Delay for 2 seconds before updating again
}
